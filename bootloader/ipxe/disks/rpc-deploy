#!ipxe
#
##########################################
# Rackspace Private Cloud iPXE Boot Loader
##########################################
#
set esc:hex 1b
set bold ${esc:string}[1m
set boldoff ${esc:string}[22m
set fg_gre ${esc:string}[32m
set fg_cya ${esc:string}[36m
set fg_whi ${esc:string}[37m
set version 1.00
set space:hex 20:20
set space ${space:string}
set github_user rcbops
set github_repo rpc-deploy
set github_branch master
set mirror mirror.rackspace.com
set mirror_base_dir /ubuntu/
set preseed_repo https://raw.githubusercontent.com/rcbops/rpc-deploy/master/bootloader/preseeds
set rhel_base_url http://b13eae580cccdb02b66a-636e9e26d53f64913c9aaf599b409620.r60.cf2.rackcdn.com/rhel/7
set config_mode github
set git_url http://example.com/set/git/repo/location

:start
echo ${bold}${fg_gre}rpc-deploy bootloader ${fg_whi}v${version}${boldoff}
prompt --key m --timeout 4000 Hit the ${bold}m${boldoff} key to open failsafe menu... && goto failsafe || goto dhcp

:dhcp
dhcp || goto netconfig
goto menu

:netconfig
echo Network Configuration:
echo Available interfaces...
ifstat
imgfree
echo -n Set network interface number [0 for net0, defaults to 0]: ${} && read net
isset ${net} || set net 0
echo -n IP: && read net${net}/ip
echo -n Subnet mask: && read net${net}/netmask
echo -n Gateway: && read net${net}/gateway
echo -n DNS: && read dns
ifopen net${net}
goto menu || goto failsafe

:failsafe
menu rpc-deploy Failsafe Menu
item localboot Boot to local drive
item netconfig Manual network configuration
item retry Retry boot
item debug iPXE Debug Shell
item reboot Reboot System
choose failsafe_choice || exit
goto ${failsafe_choice}

:menu
clear menu
menu Rackspace Private Cloud Deployment System
item --gap Default boot:
item local ${space} Boot from local hdd
item --gap Product Installs
item rpco ${space} RPC-O (DEV)
item rpcr ${space} RPC-R
item --gap Utility Image Actions
item obm ${space} Configure Out of Band Management *DEV*
item lldp ${space} Get LLDP Info
item firmware ${space} Firmware Update *DEV*
item debug ${space} Load Utility Debug
item --gap Configurations
item change_mode ${space} Configuration Mode: ${config_mode}
iseq ${config_mode} url && item --gap Deployment git repo URL: ${git_url} ||
iseq ${config_mode} url && item set_config_url ${space} Set git repo URL ||
iseq ${config_mode} github && item --gap Deployment Repo on Github - /${github_user}/${github_repo}/tree/${github_branch} ||
iseq ${config_mode} github && item github_user ${space} Github User [ ${github_user} ] ||
iseq ${config_mode} github && item github_repo_name ${space} Github Repo Name [ ${github_repo} ] ||
iseq ${config_mode} github && item github_branch ${space} Github Branch [ ${github_branch} ] ||
item --gap Tools
item shell ${space} iPXE shell
item netinfo ${space} Network card info
item latest ${space} Reload into latest bootloader
isset ${menu} && set timeout 0 || set timeout 300000
choose --timeout ${timeout} --default ${menu} menu || goto localboot
iseq ${menu} rpco_stein && set distro bionic && set playbook rpco-stein && goto rpc ||
echo ${cls}
goto ${menu} ||
goto localboot

:rpco
menu RPC-O Installs
item --gap Base OS Installs
item xenial ${space} Ubuntu 16.04 LTS (Manual)
item bionic ${space} Ubuntu 18.04 LTS (Manual)
item --gap RPC-O OSA Installs
item rpco_stein ${space} RPC-O 19.x (Stein) **DEV**
isset ${menu} && set timeout 0 || set timeout 300000
choose --timeout ${timeout} --default ${menu} menu || goto menu
iseq ${menu} bionic && set distro bionic && goto bionic ||
iseq ${menu} xenial && set distro xenial && goto xenial ||
iseq ${menu} rpco_stein && set distro bionic && set playbook rpco-stein && goto rpc ||
echo ${cls}
goto ${menu} ||
goto menu

:rpcr
menu RPC-R Installs
item --gap Base OS Installs
item rhel7_base_auto ${space} RHEL 7.7 (Automated)
item rhel7_base_manual ${space} RHEL 7.7 (Manual)
item --gap RHEL 7.7 Director/Undercloud
item rhel7_osp13_bm ${space} OSP 13 Director (Metal) **DEV**
item rhel7_osp13_vm ${space} OSP 13 Director (VM) **DEV**
isset ${menu} && set timeout 0 || set timeout 300000
choose --timeout ${timeout} --default ${menu} menu || goto menu
iseq ${menu} rpco_stein && set distro bionic && set playbook rpco-stein && goto rpc ||
echo ${cls}
goto ${menu} ||
goto menu

:change_mode
iseq ${config_mode} url && set config_mode github || set config_mode url
goto menu

:set_config_url
echo -n Set URL of Git Repo: && read git_url
goto menu

:github_user
echo -n Github User: && read github_user
goto menu

:github_repo_name
echo -n Github Repo: && read github_repo
goto menu

:github_branch
echo -n Github Branch: && read github_branch
goto menu

:rpc
imgfree
isset config_mode github && set base_url https://raw.githubusercontent.com/${github_user}/${github_repo}/${github_branch} ||
isset config_mode url && set base_url ${git_url} ||
:bionic
:xenial
set mirrorcfg mirror/suite=${distro} mirror/country=manual mirror/http/hostname=${mirror} mirror/http/directory=${mirror_base_dir}
set netcfg netcfg/get_ipaddress=${netX/ip} netcfg/get_netmask=${netX/netmask} netcfg/get_gateway=${netX/gateway} netcfg/get_nameservers=${dns} netcfg/disable_autoconfig=true
set dir ubuntu/dists/${distro}-updates/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64
kernel http://${mirror}/${dir}/linux ${netcfg} ${mirrorcfg} auto=true priority=critical preseed/url=${preseed_repo}/${playbook}-${distro}-preseed.cfg deploy_url=${base_url} playbook=${playbook} debian-installer/allow_unauthenticated_ssl=true initrd=initrd.gz
initrd http://${mirror}/${dir}/initrd.gz
boot
goto menu

:rhel7_base_auto
set kickstart_url ks=${rhel_kickstart_base_url}/rhel7-base.cfg
:rhel7_base_manual
goto rhel7

:rhel7_osp13_bm
set kickstart_url ks=${rhel_kickstart_base_url}/rhel7-osp13-bm.cfg
goto rhel7

:rhel7_osp13_vm
set kickstart_url ks=${rhel_kickstart_base_url}/rhel7-osp13-vm.cfg
goto rhel7

:rhel7
set rhel_kickstart_base_url https://raw.githubusercontent.com/rcbops/rpc-deploy/master/bootloader/kickstarts
set rhel_arch x86_64
isset ${dhcp-server} && set ipparam ip=dhcp || set ipparam ip=${ip}::${gateway}:${netmask}:::none:${dns}
set ipparam BOOTIF=${netX/mac} ${ipparam}
kernel ${rhel_base_url}/os/${rhel_arch}/images/pxeboot/vmlinuz repo=${rhel_base_url}/os/${rhel_arch} ${ipparam} ${kickstart_url} initrd=initrd.img
initrd ${rhel_base_url}/os/${rhel_arch}/images/pxeboot/initrd.img
boot
goto menu

:obm
echo Setup Out of Band Management
echo This will setup OBM on this server.  You will be prompted
echo for networking information and username/password for the OBM:
echo
echo -n OBM IP Address: && read obm_ip
echo -n OBM Netmask: && read obm_nm
echo -n OBM Gateway: && read obm_gw
echo -n OBM Username: && read obm_usr
echo -n OBM Password: && read obm_pw
goto utility

:utility
:firmware
:debug
:lldp
set utility_playbook ${menu}
iseq ${utility_playbook} obm && set obm_params obm_ip=${obm_ip} obm_nm=${obm_nm} obm_gw=${obm_gw} obm_usr=${obm_usr} obm_pw=${obm_pw} ||
imgfree
echo Loading the Utility Live OS image in ${utility_playbook} mode:
echo
kernel https://github.com/rcbops/rpc-deploy-utility-image/releases/latest/download/vmlinuz
initrd https://github.com/rcbops/rpc-deploy-utility-image/releases/latest/download/initrd.img
imgargs vmlinuz root=live:https://github.com/rcbops/rpc-deploy-utility-image/releases/latest/download/rootfs.img nomodeset rd.writable.fsimg rd.shell enforcing=0 BOOTIF=${netX/mac} ip=dhcp role=logging playbook=${utility_playbook} initrd=initrd.img ${obm_params}
boot
goto menu

:netinfo
menu Network info
item --gap MAC:
item mac ${space} ${netX/mac}
item --gap IP/mask:
item ip ${space} ${netX/ip}/${netX/netmask}
item --gap Gateway:
item gw ${space} ${netX/gateway}
item --gap Domain:
item domain ${space} ${netX/domain}
item --gap DNS:
item dns ${space} ${netX/dns}
item --gap DHCP server:
item dhcpserver ${space} ${netX/dhcp-server}
item --gap Next-server:
item nextserver ${space} ${next-server}
item --gap Filename:
item filename ${space} ${netX/filename}
choose empty ||
goto menu

:shell
echo Type "exit" to return to menu.
set menu main_menu
shell
goto menu

:localboot
exit

:retry
goto start

:reboot
reboot
goto start

:latest
echo Retrieving latest rpc-deploy bootloader...
iseq ${platform} efi && goto latest_efi || goto latest_legacy
:latest_efi
chain --autofree https://github.com/rcbops/rpc-deploy/releases/latest/download/rpc-deploy-bootloader.efi ||
goto start
:latest_legacy
chain --autofree https://github.com/rcbops/rpc-deploy/releases/latest/download/rpc-deploy-bootloader.lkrn ||
goto start

:debug
echo Type "exit" to return to menu
shell
goto failsafe
