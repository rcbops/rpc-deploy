#
# Ubuntu Server 16.04 Preseed for compute role
#

#############
#
# Kernel Options
#
#############

# Use the following option to add additional boot parameters for the
# installed system (if supported by the bootloader installer).
# Note: options passed to the installer will be added automatically.
d-i debian-installer/add-kernel-opts string nomodeset

#############
#
# Networking
#
#############

#d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string {{ item.key }}
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually
d-i netcfg/get_ipaddress string {{ item.value.host_ip }}
d-i netcfg/get_netmask string {{ host_cidr | ipaddr('netmask') }}
d-i netcfg/get_gateway string {{ host_cidr | ipaddr('1') | ipaddr('address') }}
d-i netcfg/get_nameservers string {{ primary_nameserver }} {{ secondary_nameserver }}
d-i netcfg/confirm_static boolean true

#############
#
# Pre Install
#
#############

# early installer command
#d-i preseed/early_command string \
#    commmand ; \ 
#     command 

#############
#
# Localization
#
#############

d-i debian-installer/locale string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8
d-i debian-installer/language string en

# Verbose output and no boot splash screen
d-i debian-installer/quiet  boolean false
d-i debian-installer/splash boolean false

#############
#
# Keyboard
#
#############

# Disable automatic (interactive) keymap detection.
d-i console-setup/ask_detect boolean false
d-i console-setup/layoutcode string us
d-i console-setup/variantcode string
d-i keyboard-configuration/layoutcode string us

#############
#
# Mirror
#
#############

d-i mirror/country string manual
d-i mirror/http/proxy string
d-i mirror/http/hostname string {{ default_ubuntu_mirror_hostname }}
d-i mirror/http/directory string {{ default_ubuntu_mirror_directory }}

#############
#
# Clock and Time Zone
#
#############

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string ntp.ubuntu.com

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string UTC

# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

#############
#
# Partitioning
#
#############

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true

# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true

# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto/method string lvm
d-i partman-auto/disk string /dev/sda

# For LVM partitioning, you can select how much of the volume group to use
# for logical volumes.
d-i partman-auto-lvm/guided_size string max

# Force UEFI mode
d-i partman-efi/non_efi_system boolean true

# enforce usage of GPT - a must have to use EFI!
d-i partman-basicfilesystems/choose_label string gpt
d-i partman-basicfilesystems/default_label string gpt
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt
d-i partman/choose_label string gpt
d-i partman/default_label string gpt

d-i partman-auto/choose_recipe select custompartitioning
d-i partman-auto/expert_recipe string \
      custompartitioning :: \
              1024 1 1024 fat32                               \
                      $defaultignore{ }                       \
                      $iflabel{ gpt }                         \
                      $reusemethod{ }                         \
                      method{ efi }                           \
                      format{ }                               \
              .                                               \
              1024 1 1024 ext2                                \
                      $bootable{ }                            \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext2 }    \
                      label{ boot }                           \
                      mountpoint{ /boot }                     \
              .                                               \
              1024 1 100% ext4                                \
                      $primary{ }                             \
                      method{ lvm }                           \
                      device{ /dev/sda3 }                     \
                      vg_name{ lxc }                          \
              .                                               \
              8192 1 8192 linux-swap                          \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ swap00 }                       \
                      method{ swap } format{ }                \
              .                                               \
              51200 1 51200 ext4                              \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ root00 }                       \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ root }                           \
                      mountpoint{ / }                         \
              .                                               \
              5120 1 5120 ext4                                \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ openstack00 }                  \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ openstack00 }                    \
                      mountpoint{ /openstack }                \
              .                                               \
              204800 1 204800 ext4                            \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ nova00 }                       \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ nova }                           \
                      mountpoint{ /var/lib/nova }             \
              .                                               \
              5120 1 5120 ext4                                \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ home00 }                       \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ home }                           \
                      mountpoint{ /home }                     \
              .                                               \
              10240 1 10240 ext4                              \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ tmp00 }                        \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ tmp }                            \
                      mountpoint{ /tmp }                      \
              .                                               \
              10240 1 10240 ext4                              \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ var00 }                        \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ var }                            \
                      mountpoint{ /var }                      \
              .                                               \
              10240 1 10240 ext4                              \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ varlog00 }                     \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ varlog }                         \
                      mountpoint{ /var/log }                  \
              .                                               \
              5120 1 5120 ext4                                \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ varlogaudit00 }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ varlogaudit }                    \
                      mountpoint{ /var/log/audit }            \
              .                                               \
              1024 1 1000000000 ext4                          \
                      $lvmok{ } in_vg{ lxc }                  \
                      lv_name{ deleteme00 }                   \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      label{ deleteme00 }                     \
                      mountpoint{ /deleteme }                 \
              .                                               \

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman-md/confirm boolean true
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

#############
#
# Packages
#
#############

# Package selection
tasksel tasksel/first multiselect openssh-server
d-i pkgsel/include string sudo tcpdump vlan ifenslave xfsprogs lvm2 man bridge-utils lldpd

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
d-i pkgsel/upgrade select none

# Policy for applying updates. May be "none" (no automatic updates),
# "unattended-upgrades" (install security updates automatically), or
# "landscape" (manage system with Landscape).
d-i pkgsel/update-policy select none

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
popularity-contest popularity-contest/participate boolean false

#############
#
# Users and Password
#
#############

d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password !!
d-i passwd/make-user boolean false

# The root password is disabled by default. In case you want to use a root
# password, please generate a password with the following command
#   printf "please-change-password" | mkpasswd -s -m sha-512
# and update the passwd/root-password-crypted variable accordingly. Furthermore
# you need to remove the call to "usermod" below.

#############
#
# Bootloader
#
#############

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev  string /dev/sda

#############
#
# Post Install
#
#############

d-i preseed/late_command string \
    in-target mkdir -p /root/.ssh; \
    in-target /bin/sh -c "echo '{{ root_public_key | default('# authorized_keys') }}' >> /root/.ssh/authorized_keys"; \
    in-target sh -c 'usermod -p "!" root'; \
    in-target sh -c 'sed -i "s/^#PermitRootLogin.*\$/PermitRootLogin prohibit-password/g" /etc/ssh/sshd_config'; \
    in-target sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=""/g' /etc/default/grub ; \
    in-target sed -i 's/GRUB_TIMEOUT=*/GRUB_TIMEOUT=10/g' /etc/default/grub ; \
    in-target sed -i 's/GRUB_HIDDEN_TIMEOUT=.*/d' /etc/default/grub ; \
    in-target sed -i 's/GRUB_HIDDEN_TIMEOUT_QUIET=.*/GRUB_TIMEOUT_STYLE=countdown/g' /etc/default/grub ; \
    in-target update-grub ; \
    wget -O- http://{{ tftp_server }}/pxe/{{ item.value.mac | replace(':', '-') | lower }}/configs/interfaces.sh | chroot /target /bin/sh -s -x ; \
    in-target sh -c 'wget http://{{ tftp_server }}/deploy_key -O /root/deploy_key' ; \
    in-target sh -c 'chmod 0600 /root/deploy_key' ; \
    in-target sh -c 'ssh -o StrictHostKeyChecking=no -i /root/deploy_key deploy@{{ tftp_server }} "rm -f {{ item.value.mac | replace(':', '-') | lower }}/provision"' ; \
    in-target sh -c 'rm -f /root/deploy_key'

#############
#
# Finish
#
#############

# Reboot after the install is finished.
finish-install finish-install/reboot_in_progress note
